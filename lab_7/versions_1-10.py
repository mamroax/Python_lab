def var1():
    """1. Написать родительский и дочерний классы с методами
    «display». В каждом методе в консоль выводится различная
    строка. """


def var2():
    """2. Написать класс Exception с возможностью передачи в
    него сообщения и реализовать класс, в котором будет пробрасываться данный Exception."""


def var3():
    """3. Написать класс, который реализует паттерн Singleton."""


def ver4():
    """4. Написать класс, который содержит два метода
    «get_string» и «print_upper_string», где первый метод принимает
    строку, а второй выводит данную строку в верхнем регистре."""


def ver5():
    """5. Написать класс UserLanguagePreference, который в
    конструкторе принимает список языков в виде строки, которые
    использует пользователей и содержит метод add_lang(lang_str),
    который добавляет язык в список, если его там не существует.
    Данный класс использует инкапсуляцию, для получения используемого списка."""


def ver6():
    """6. Написать класс Shape, который является родительским
    для класса Square, который содержит конструктор, принимающий длину.
    Оба класса содержат метод area() для расчета площади.
    Причем класс Shape имеет площадь равную нулю."""


def ver7():
    """7. Написать класс Point, который в конструкторе принимает
     координаты точки и содержит методы show(), move() и
    dist(), где первый метод возвращает координаты точки, второй
    принимает значения, на которые нужно сместить координаты
    точки, и последний выводит расстояние по следующей формуле:
    √( )( )."""


def ver8():
    """8. Написать класс ORMMapper, который в конструкторе
    принимает имя другого существующего класса, который
    содержит только поля и с помощью метода convert_to_db()
    создает на основе структуры полученного класса таблицу в базе данных."""


def ver9():
    """9. Написать класс Publisher и несколько различных
    классов с постфиксом Subscriber. Реализовать между данными
    классами отношения по паттерну Observer."""


def ver10():
    """10. Написать класс ChartDrawer, который принимает
    список списков, содержащих координаты точек и содержит методы
    add_point(x, y) для добавления новой точки в список, remove_point(x, y)
    для удаления точек с указанными координатами.
    Класс должен правильно использовать инкапсуляцию."""
